.HelmChartLint: &HelmChartLint
  name: HelmChartLint
  image: alpine/helm:3.10.0

  environment:
    CHART_PATH: "./charts"

  commands:
    - |
      for dir in "$CHART_PATH"/*; do
        [[ -e "$dir" ]] || break # handle case of no charts
        [[ -d "$dir" ]] || continue # handle case that $dir is a file

        if [ ! -f "$dir/Chart.yaml" ]; then
          echo "skipping $dir because it lacks a Chart.yaml file"
        else
          echo "linting $dir"
          helm lint "$dir"
        fi
      done

.HelmChartPublish: &HelmChartPublish
  name: HelmChartPublish
  image: alpine/helm:3.10.0

  environment:
    HELM_REPO_NAME: "" # defaults to project name
    HELM_ENDPOINT: "" # defaults to gitea organization helm registry if running in gitea
    HELM_USER: "" # defaults to CI_REGISTRY_USER
    HELM_PASSWORD: "" # defaults to CI_REGISTRY_PASSWORD

    CHART_PATH: "./charts"
    TAG_CHART_VERSION_ENABLE: "true"

  commands:

    - &HelmChartPublishCommands |
      # drone does not support expanding vars in environment values, set defaults via bash
      if [[ -z "$HELM_REPO_NAME" ]]; then HELM_REPO_NAME=$CI_PROJECT_NAME; fi
      if [[ -z "$HELM_USER" ]]; then HELM_USER=$CI_REGISTRY_USER; fi
      if [[ -z "$HELM_PASSWORD" ]]; then HELM_PASSWORD=$CI_REGISTRY_PASSWORD; fi

      # add default chart endpoints for gitea
      if [[ -z "$HELM_ENDPOINT" ]]; then
        if [[ ! -z "$GITEA_PACKAGES_API" ]]; then
          HELM_ENDPOINT="$GITEA_PACKAGES_API/$CI_PROJECT_NAMESPACE/helm"
        else
          echo "ERROR: no helm endpoint defined"
          exit 1
        fi
      fi

      # install plugin chartmuseum/helm-push
      helm plugin install https://github.com/chartmuseum/helm-push

      # register repo
      helm repo add --username="$HELM_USER" --password="$HELM_PASSWORD" "$HELM_REPO_NAME" "$HELM_ENDPOINT"

      # prepare packages
      for dir in $CHART_PATH/*; do echo $dir; done
      for dir in $CHART_PATH/*; do
        [[ -e "$dir" ]] || break # handle case of no charts
        [[ -d "$dir" ]] || continue # handle case that $dir is a file

        if [ ! -f "$dir/Chart.yaml" ]; then
          echo "skipping $dir because it lacks a Chart.yaml file"
        else
          echo "packaging $dir"
          helm cm-push $dir "$HELM_REPO_NAME"
        fi
      done
